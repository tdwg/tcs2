localName,label,skos_inScheme,controlled_value_string,definition,usage,notes,examples,type
rt,Taxon Relationship Type Concept Scheme,rt,,,,,,http://www.w3.org/2004/02/skos/core#ConceptScheme
rt001,Is Congruent With,rt,isCongruentWith,"The subject and object taxon concepts have a congruent taxonomic meaning or  referential extension, _i.e._ there is no conflict between the concepts.",,,,http://www.w3.org/2004/02/skos/core#Concept
rt002,Includes,rt,includes,The subject taxon concept has a more inclusive taxonomic meaning than the object taxon concept.,,,,http://www.w3.org/2004/02/skos/core#Concept
rt003,Is Included In,rt,isIncludedIn,The subject taxon concept has a less inclusive taxonomic meaning than the  object taxon concept.,,,,http://www.w3.org/2004/02/skos/core#Concept
rt004,Overlaps,rt,overlaps,"The subject and object taxon concepts have partially overlapping taxonomic  meanings, _i.e._ they have some members in common, but each concept in  addition has members that are not included in the other concept.",,,,http://www.w3.org/2004/02/skos/core#Concept
rt005,Excludes,rt,excludes,"The subject and objects taxon concepts have non-overlapping taxonomic  meanings, _i.e._ they do not have any members in common.",,,,http://www.w3.org/2004/02/skos/core#Concept
rt006,Intersects,rt,intersects,"The taxonomic meanings of the subject and object taxon concepts intersect,  _i.e._ they have at least one member in common.",,"This relationship type can be used when the more precise nature of the  relationship is not known, _e.g._ when dealing with nominal or informal  taxon concepts. It is the opposite of `excludes`.<br/><br/> intersects = {`isCongruentWith` OR `includes` OR `isIncludedIn` OR  `overlaps`} = not {`excludes`}",,http://www.w3.org/2004/02/skos/core#Concept
