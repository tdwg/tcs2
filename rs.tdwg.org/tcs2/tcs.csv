term_localName,label,definition,usage,notes,examples,definition_derived_from,type,tdwgutility_organizedInClass
TaxonConcept,Taxon Concept,An identifiable taxonomic position that can be aligned to other such positions through TCS concept mapping relations.,A `TaxonConcept` MUST have `taxonName` and `accordingTo` properties.,"A taxonomic position is an opinion about the definition of a taxonomic group. A Taxon Concept is identifiable, because it combines a label – `taxonName` in TCS – with a source – `accordingTo`. Both the `taxonName` and `accordingTo` properties are REQUIRED on a `tcs:TaxonConcept`. When mentioning a taxon concept, the label and the source are combined, separated by 'sec.' (from, 'secundus', meaning 'according to') or 'sensu' (meaning the same). The term `dcterms:title` has been borrowed from Dublin Core to provide this taxon concept label. Because of the context provided by the source, taxon concepts are in principle also alignable to other Taxon Concepts using TCS concept mapping statements. The concept mapping properties in TCS are `isCongruentWith`, `includes`, `isIncludedIn`, `partiallyOverlaps`, `isDisjointFrom` and `intersects`. These properties can be used directly on a `TaxonConcept` object or as the value of the `tcs:mappingRelation` property in a `tcs:TaxonConceptMapping` object.¶The TCS Taxon Concept is applied more broadly than the term is used in science (e.g. Franz & Peet 2009 [\[franz_perspectives_2009\]](../bibliography/#franz_perspectives_2009)). On the one hand, things that are not generally considered to be biological taxa, e.g. hybrids and cultivars, can be casted as TCS Taxon Concepts. Also Operational Taxonomic Units (OTUs) [\[sokal_principles_1963\]](../bibliography/#sokal_principles_1963) can be exchanged as Taxon Concepts, if there is a reason to do so, e.g. if one wants to align them with other Taxon Concepts later. On the other hand, entries from treatments that are considered to cite concepts from other treatments can be formulated as Taxon Concepts. Every taxon concept from a treatment that is likely to be referenced as the source of taxonomic context, for example a field guide for a determination of a specimen or a national census for an ecological study, can – and it would be very nice if they would – be stated as a Taxon Concept, so they can be aligned with other Taxon Concepts that may provide more or different taxonomic context.¶By contrast, entries in the nomenclature section of treatments ('TaxonomicNameUsage's sensu Senderov et al. 2018 &#91;[senderov_openbiodiv-o_2018](#senderov_openbiodiv-o_2018)&#93;) and in lists of nomenclatural types are not Taxon Concepts.",https://tdwg.github.io/tcs2/examples/TaxonConcept-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-example-3.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-example-4.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-example-5.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-example-6.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-example-7.html,,http://www.w3.org/2000/01/rdf-schema#Class,http://rs.tdwg.org/tcs/terms/TaxonConcept
accordingTo,According To,Reference to the treatment or other source in which a Taxon Concept is established or used.,`accordingTo` is an IRI term and is REQUIRED on a Taxon Concept. A Taxon Concept can have only one `accordingTo`.,"Every Taxon Concept is in some sort of treatment and this treatment provides important context without which we do not know what a taxon name really means and therefore the `accordingTo` property is REQUIRED for a TCS Taxon Concept. In TCS 2, `accordingTo` has to be a reference to some sort of resource rather than just a person's name. However, TCS is lenient about the nature of this resource and, apart from references to bibliographic resources, references to personal communications and determinations are also acceptable, if there is value in supplying taxon concepts from such communications as Taxon Concepts.¶The value of `accordingTo` has to be an object or IRI. This object can contain as little as a bibliographic reference but it is more useful to provide it in a format that can be understood by reference managers such as Zotero or Mendeley.",https://tdwg.github.io/tcs2/examples/TaxonConcept-accordingTo-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-accordingTo-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-accordingTo-example-3.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
taxonName,Taxon Name,The accepted name for the taxonomic group.,`taxonName` is an IRI term and is REQUIRED on a TCS Taxon Concept. A Taxon Concept MUST NOT have more than one `taxonName`.,"The `taxonName` can be anything from a well-formed scientific name to an informal name, vernacular name, indigenous knowledge label, or even a label containing numbers and/or special symbols, such as are often used for OTUs. ¶The object of `taxonName` is an object or IRI, so that it can be reused in other Taxon Concepts. TCS has got the Taxon Name class, which can be used for any type of name, but people are free to use alternatives, e.g. `skosxl:Label`, if they want to restrict the use of the Taxon Name class to scientific names only.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
synonym,Synonym,Name considered to apply to the same taxon as the accepted name.,`synonym` is a Taxon Name; a Taxon Concept can have multiple synonyms.,"A synonym is an alternative label for a taxon, so `synonym`, like `taxonName`, is a relation between a `TaxonConcept` and a `TaxonName`, not a relationship between different taxonomic entities.¶The terms 'heterotypic synonym' and 'homotypic synonym' from the nomenclatural codes ('subjective synonym' and 'objective synonym', respectively, in the Zoological Code) are, in the context of Taxon Concepts and Taxon Names, best understood as synonyms (relations between Taxon Concepts and Taxon Names) and combinations (relations between Taxon Names), respectively. In TCS, combinations are dealt with using properties of the `TaxonName` class, _e.g._, `basionym` and `replacedName` (note that 'combination' is used here in a broader sense than what the term actually means). This has the advantage that people do not need to separate heterotypic and homotypic synonyms, or generally deal with nomenclature, which adds a degree of complexity that not all systems need or want. Avoiding terms that are strictly defined in the nomenclatural codes also has the advantage that the term can, in principle, be applied to things that cannot be heterotypic or homotypic synonyms, e.g., to names that are not validly published under the relevant code, and avoids inappropriate use of the terms defined in the nomenclatural codes.",https://tdwg.github.io/tcs2/examples/TaxonConcept-synonym-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-synonym-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-synonym-example-3.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
vernacularName,Vernacular Name,Name for a taxon in a language used for general purposes.,`vernacularName` is an IRI term; a Taxon Concept can have more than one `vernacularName`.,"The `vernacularName` property can be used when a vernacular name is used alongside a scientific name, which is the `taxonName`. If a vernacular name is the only name, the `taxonName` property SHOULD be used. The object of the `vernacularName` property can be a Taxon Name, but another label object, such as the GBIF [Vernacular Name](https://rs.gbif.org/extension/gbif/1.0/vernacularname.xml), might be preferrable, especially if there can be multiple vernacular names for a concept.",https://tdwg.github.io/tcs2/examples/TaxonConcept-vernacularName-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-vernacularName-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-vernacularName-example-3.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-vernacularName-example-4.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
taxonRank,Taxon Rank,The rank at which a taxon is classified.,`taxonRank` is an IRI property; a Taxon Concept or Taxon Name MUST NOT have more than one `taxonRank`.,"This term is the IRI equivalent of the Darwin Core `taxonRank`. This property takes an object or IRI and it is RECOMMENDED to use a value from an existing controlled vocabulary. While there is no TDWG vocabulary yet, the GBIF Taxonomic Rank Vocabulary ([https://rs.gbif.org/vocabulary/gbif/rank_2015-04-24.xml](https://rs.gbif.org/vocabulary/gbif/rank_2015-04-24.xml)) is RECOMMENDED.¶A taxon name takes its rank from the taxon it is applied to, so this property can also be used on a (stand-alone) `TaxonName` object.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
parentTaxonConcept,Parent Taxon Concept,The immediately next higher taxon in a hierarchical classification.,`parentTaxonConcept` is another Taxon Concept; a Taxon Concept can have only one `parentTaxonConcept`.,"This is the parent as indicated in the `accordingTo` reference, rather than a third-party classification. The `accordingTo` of the parent will generally, but not necessarily, be the same as that of the child.",https://tdwg.github.io/tcs2/examples/TaxonConcept-parent-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
childTaxonConcept,Child Taxon Concept,A direct subordinate in a hierarchical classification.,`childTaxonConcept` is another Taxon Concept; a Taxon Concept can have more than one `childTaxonConcept`.,"This is a child as indicated in the `accordingTo` reference, rather than a third-party classification. The `accordingTo` of the child will generally, but not necessarily, be the same as that of the parent.",https://tdwg.github.io/tcs2/examples/TaxonConcept-child-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
isCongruentWith,Is Congruent With,"The subject and object taxon concepts have a congruent taxonomic meaning, i.e. there is no conflict between the concepts","`isCongruentWith` can be used as a property on a Taxon Concept object, or as the value of the `mappingRelation` property on a Taxon Concept Mapping object. In both cases both the subject and object are Taxon Concepts.","The `isCongruentWith` relation is symmetrical, so if A `isCongruentWith` B then B `isCongruentWith` A, as well as transitive, so if A `isCongruentWith` B and B `isCongruentWith` C it follows that A `isCongruentWith` C. This relation can also be written as the formula **A &cong; B** or **A == B**.¶",https://tdwg.github.io/tcs2/examples/TaxonConcept-isCongruentWith-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isCongruentWith-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-isCongruentWith-example-3.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isCongruentWith-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
includes,Includes,The subject taxon concept has a more inclusive taxonomic meaning than the object taxon concept,"`includes` can be used as a property on a Taxon Concept object, or as the value of the `mappingRelation` property on a Taxon Concept Mapping object. In both cases both the subject and object are Taxon Concepts.","The `includes` relation is not symmetric, its inverse relation being `isIncludedIn`, so if A `includes` B then B `isIncludedIn` A. The `includes` relation is transitive, so if A `includes` B and B `includes` C it follows that A `includes` C. This relation can also be written as the formula **A > B**.¶",https://tdwg.github.io/tcs2/examples/TaxonConcept-includes-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-includes-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-includes-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
isIncludedIn,Is Included In,The subject taxon concept has a less inclusive taxonomic meaning than the object taxon concept,"`isIncludedIn` can be used as a property on a Taxon Concept object, or as the value of the `mappingRelation` property on a Taxon Concept Mapping object. In both cases both the subject and object are Taxon Concepts.","The `isIncludedIn` relation is not symmetric, its inverse relation being `includes`, so if A `isIncludedIn` B then B `includes` A. The `isIncludedIn` relation is transitive, so if A `isIncludedIn` B and B `isIncludedIn` C it follows that A `isIncludedIn` C. This relation can also be written as the formula **A < B**.¶",https://tdwg.github.io/tcs2/examples/TaxonConcept-isIncludedIn-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isIncludedIn-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isIncludedIn-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
partiallyOverlaps,Partially Overlaps,"The subject and object taxon concepts have partially overlapping taxonomic meanings, _i.e._ they have some members in common, but each concept in addition has members that are not included in the other concept","`partiallyOverlaps` can be used as a property on a Taxon Concept object, or as the value of the `mappingRelation` property on a Taxon Concept Mapping object. In both cases both the subject and object are Taxon Concepts.","The `partiallyOverlaps` relation is symmetrical, so if A `partiallyOverlaps` B then B `partiallyOverlaps` A, but not transitive, so, if A `partiallyOverlaps` B and B `partiallyOverlaps` C, it does not follow that A `partiallyOverlaps` C. This relation can also be written as the formula **A >< B**.¶",https://tdwg.github.io/tcs2/examples/TaxonConcept-partiallyOverlaps-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-partiallyOverlaps-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-partiallyOverlaps-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
isDisjointFrom,Is Disjoint From,"The subject and object taxon concepts have non-overlapping taxonomic meanings, _i.e._ they do not have any members in common","`isDisjointFrom` can be used as a property on a Taxon Concept object, or as the value of the `mappingRelation` property on a Taxon Concept Mapping object. In both cases both the subject and object are Taxon Concepts.","The `isDisjointFrom` relation is symmetrical, so if A `isDisjointFrom` B then B `isDisjointFrom` A, but not transitive, so, if A `isDisjointFrom` B and B `isDisjointFrom` C, it does not follow that A `isDisjointFrom` C. This relation can also be written as the formula **A | B**.¶",https://tdwg.github.io/tcs2/examples/TaxonConcept-isDisjointFrom-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isDisjointFrom-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isDisjointFrom-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
intersects,Intersects,"The taxonomic meanings of the subject and object taxon concepts intersect, _i.e._ they have at least one member in common.","`intersects` can be used as a property on a Taxon Concept object, or as the value of the `mappingRelation` property on a Taxon Concept Mapping object. In both cases both the subject and object are Taxon Concepts.","`intersects` is the opposite of `isDisjointFrom` and the union of `isCongruentWith`, `includes`, `isIncludedIn` and `partiallyOverlaps`, meaning it can be any of these relations. This relation can be used when the more precise nature of the relationship is not known. Quasi-nomenclatural statements like 'pro parte synonym', 'partial synonym' and 'misapplication', are Taxon Concept Mappings, no matter how imperfect, and, in TCS, are best dealt with using the `intersects` relation. In fact, all 'traditional synonymy' relationships, cf. Berendsohn & al. (2000 [\[berendsohn_berlin_2003\]](../bibliography/#berendsohn_berlin_2003)), can be accommodated using `intersects`. Also, citations of references in treatments are, in the context of TCS, best accommodated using the `intersects` relation.",https://tdwg.github.io/tcs2/examples/TaxonConcept-intersects-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-intersects-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-intersects-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConcept-intersects-example-3.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConcept
TaxonConceptMapping,Taxon Concept Mapping,Alignment or mapping of two Taxon Concepts in different taxonomies or different versions of a taxonomy,"When using this class the `subjectTaxonConcept`, `mappingRelation` and `objectTaxonConcept` are REQUIRED","The Taxon Concept Mapping class allows for adding extra data to a taxon concept mapping statement. As it allows for adding an 'according to' to a concept mapping it can be used for third-party mappings. While structurally very similar to the Darwin Core Resource Relationship class, it is different in that instances of the Taxon Concept Mapping class are meaningful as standalone objects.",https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isCongruentWith-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isCongruentWith-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-includes-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-includes-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isIncludedIn-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isIncludedIn-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-partiallyOverlaps-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-partiallyOverlaps-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isDisjointFrom-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-isDisjointFrom-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-intersects-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonConceptMapping-intersects-example-2.html,,http://www.w3.org/2000/01/rdf-schema#Class,http://rs.tdwg.org/tcs/terms/TaxonConceptMapping
mappingAccordingTo,Mapping According To,Reference to the source of the taxon concept mapping.,`mappingAccordingTo` is an IRI term; a Taxon Concept Mapping can have only one `mappingAccordingTo`.,,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConceptMapping
mappingRelation,Mapping Relation,The kind of mapping relation between the two concepts,"This property is REQUIRED; one MUST use one of the mapping properties `isCongruentWith`, `includes`, `isIncludedIn`, `partiallyOverlaps`, `isDisjointFrom` or `intersects`.",,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConceptMapping
subjectTaxonConcept,Subject Taxon Concept,Taxon Concept that is the subject in the mapping statement.,`subjectTaxonConcept` is a TCS Taxon Concept; a Taxon Concept Mapping statement can have only one `subjectTaxonConcept`.,This is the Taxon Concept at the left-hand side of the statement.,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConceptMapping
objectTaxonConcept,Object Taxon Concept,Taxon Concept that is the object in the mapping statement.,`objectTaxonConcept` is a TCS Taxon Concept; a Taxon Concept Mapping statement can have only one `objectTaxonConcept`.,This is the Taxon Concept at the right-hand side of the statement.,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonConceptMapping
TaxonName,Taxon Name,A name or label applied to a taxon or taxonomic group.,A TCS Taxon Name MUST have a `nameString`.,"The word 'name' here is taken in its dictionary meaning and not in the sense of a particular nomenclatural code. This means that the Taxon Name class can, in principle, be used for any type of name, not just names that are validly published under the relevant nomenclatural code.",https://tdwg.github.io/tcs2/examples/TaxonName-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonName-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonName-example-3.html | https://tdwg.github.io/tcs2/examples/TaxonName-example-4.html,,http://www.w3.org/2000/01/rdf-schema#Class,http://rs.tdwg.org/tcs/terms/TaxonName
nameString,Name String,The complete name string without any authority or year components.,`nameString` is a literal. The `nameString` property is REQUIRED on a TCS Taxon Name and a Taxon Name can have only one `nameString`.,"The `nameString` property differs from the `scientificName` property in Darwin Core in that all kinds of names are allowed. Also, in the case of scientific names, contrary to the `dwc:scientificName`, `nameString` does not include the authorship. In botanical names, it does include the rank prefixes for infrageneric and infraspecific epithets as they are considered part of the name.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
namePublishedIn,Name Published In,Reference to the publication in which the name was first published.,,"In botany, this would be the protologue. This is the IRI counterpart of the Darwin Core `namePublishedIn`, which TCS borrows.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
microreference,Microreference,"Specifies any minor reference parts, e.g. page number.",`microreference` is a string literal; a Taxon Name can have only one `microreference` and only when `namePublishedIn` is used as well.,"In taxonomic works it is convention to cite the exact location in a work where a new name is published. The `microreference` property lets one do that on the Taxon Name object, so that the `namePublishedIn` reference can be reused.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
nomenclaturalCode,Nomenclatural Code,Nomenclatural code that applies to the group of organisms the taxonomic name is for.,`nomenclaturalCode` takes an IRI or object; a Taxon Name can have only one `nomenclaturalCode`.,"This is the IRI equivalent of the Darwin Core `nomenclaturalCode`. In the absence of a TDWG vocabulary, it is RECOMMENDED to use a value from the GBIF Nomenclatural Codes Vocabulary ([https://rs.gbif.org/vocabulary/gbif/nomenclatural_code.xml](https://rs.gbif.org/vocabulary/gbif/nomenclatural_code.xml)).",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
nomenclaturalStatus,Nomenclatural Status,Status related to the original publication of the name and its conformance to the relevant rules of nomenclature.,`nomenclaturalStatus` takes an IRI or object; a Taxon Name can have only one `nomenclaturalStatus`.,"This is the IRI equivalent of the Darwin Core `nomenclaturalStatus`. In the absence of a TDWG vocabulary, it is RECOMMENDED to use a value from the GBIF Nomenclatural Status Vocabulary ([https://rs.gbif.org/vocabulary/gbif/nomenclatural_status_2019-02-08.xml](https://rs.gbif.org/vocabulary/gbif/nomenclatural_status_2019-02-08.xml)).",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
typification,Typification,Designation of a nomenclatural type for a name,The `typification` property takes a TCS Nomenclatural Type or list of Nomenclatural Types.,`tcs:typification` is the inverse of `tcs:typifiedName`.,https://tdwg.github.io/tcs2/examples/TaxonName-typification-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonName-typification-example-2.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
typificationLiteral,Typification,Designation of a nomenclatural type for a name,The `typificationLiteral` property takes a literal value.,The `typificationLiteral` property can be used for citation of a type (or types) as written in the publication in which the typified name was published.,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
basionym,Basionym,Epithet- or name-bringing synonym.,A `basionym` is another Taxon Name; a Taxon Name can have only one `basionym`.,"The term `basionym` is in the draft BioCode ([\[greuter_draft_2011\]](../bibliography/#greuter_draft_2011)), so can be used for all organisms. The `basionym` property is only used for new combinations ('comb. nov.'). If the new name is a replacement name ('nom. nov.') the `replacedName` property SHOULD be used instead. It SHOULD be noted that a basionym is always a different name or combination: a name cannot be its own basionym.",https://tdwg.github.io/tcs2/examples/TaxonName-basionym-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonName-basionym-example-2.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
replacedName,Replaced Name,"The legitimate or illegitimate, previously published name on which a replacement name (nomen novum) is based.",`replacedName` is another Taxon Name; a Taxon Name can have only one `replacedName`.,'replaced name' is used in the draft BioCode ([\[greuter_draft_2011\]](../bibliography/#greuter_draft_2011)). In the Botanical Code the term 'replaced synonym' is used for the same thing. A 'replacement name' is a name that is published as a substitute for an earlier published name that is either illegitimate or for which a new combination cannot be created in the place a taxon is transferred to because of an older blocking name.,https://tdwg.github.io/tcs2/examples/TaxonName-replacedName-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonName-replacedName-example-2.html | https://tdwg.github.io/tcs2/examples/TaxonName-replacedName-example-3.html | https://tdwg.github.io/tcs2/examples/TaxonName-replacedName-example-4.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
basedOn,Based On,Earlier name on which this name is based,`basedOn` is another Taxon Name; a Taxon Name can have only one `basedOn`. The term SHOULD only be used in situations where the semantically more meaningful `basionym` and `replacedName` cannot be used.,"The `basedOn` property can be used to associate a name to a homotypic group of names in situations where the `basionym` and `replacedName` properties cannot be used. Therefore the property can be useful for (1) linking an autonym to a species name, (2) linking a valid name to an earlier invalid name and (3) linking an invalid name to a later valid name.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
laterHomonymOf,Later Homonym Of,An older legitimate name with the same spelling but a different nomenclatural type,`laterHomonymOf` is another Taxon Name object,"If there are more than two homonyms, the oldest name SHOULD be given here. In zoology, this is the _senior homonym_.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
conservedAgainst,Conserved Against,Name(s) against which this name is conserved.,The `conservedAgainst` property takes another Taxon Name; a Taxon Name can be conserved against more than one other Taxon Names.,"A scientific name below the rank of family is not conserved against all other names, but only against one or more names that in turn are rejected against the conserved name. A name can be conserved against more than one other name, so this property is repeatable.",https://tdwg.github.io/tcs2/examples/TaxonName-conservedAgainst-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
combinationAuthor,Combination Author,Author of the combination,`combinationAuthor` is an IRI property. It can be a person or a list of persons.,'combination' is taken here to be one of a group of different names with the same nomenclatural type. `combinationAuthor` is the author (or authors) that is not in parentheses in the `dwc:scientificNameAuthorship`.,https://tdwg.github.io/tcs2/examples/TaxonName-combinationAuthor-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonName-combinationAuthor-example-2.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
combinationAuthorLiteral,Combination Author,Author of the combination,`combinationAuthorLiteral` is a Literal property.,'combination' is taken here to be one of a group of different names with the same nomenclatural type. `combinationAuthorLiteral` is the author (or authors) that is not in parentheses in the `dwc:scientificNameAuthorship`.,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
basionymAuthor,Basionym Author,Author of the basionym of the described name,`basionymAuthor` is an IRI property. It can be a person or a list of persons.,`basionymAuthor` (or its literal counterpart) is the author (or authors) in parentheses in the `dwc:scientificNameAuthorship`.,https://tdwg.github.io/tcs2/examples/TaxonName-basionymAuthor-example-1.html | https://tdwg.github.io/tcs2/examples/TaxonName-basionymAuthor-example-2.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
basionymAuthorLiteral,Basionym Author,Author of the basionym of the described name,`basionymAuthorLiteral` is a Literal property.,`basionymAuthorLiteral` is the author (or authors) in parentheses in the `dwc:scientificNameAuthorship`.,,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
combinationAscribedAuthor,Combination Ascribed Author,Ascribed author of the described name,`combinationAscribedAuthor` is an IRI property. It can be a person or a list of persons.,"An 'ascribed author' is a person (or group of people) who a name is ascribed to in a publication, but who is not the author of the name according to the rules of the nomenclatural codes, because they did not contribute to the validating description of the name. In the `dwc:scientificNameAuthorship` these authors are indicated with 'ex', the ascribed author coming before the 'ex' and the author the name is attributed to after. Note that the 'ex' (or 'Ex') construction that is sometimes used with zoological names has got nothing to do with attribution or ascription, but is used to denote a concept, much like we do here with 'sec.' or 'sensu' in taxon concept labels.",https://tdwg.github.io/tcs2/examples/TaxonName-combinationAscribedAuthor-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
combinationAscribedAuthorLiteral,Combination Ascribed Author,Ascribed author of the described name,`combinationAscribedAuthorLiteral` is a Literal property.,"An 'ascribed author' is a person (or group of people) who a name is ascribed to in a publication, but who is not the author of the name according to the rules of the nomenclatural codes, because they did not contribute to the validating description of the name. In the `dwc:scientificNameAuthorship` these authors are indicated with 'ex', the ascribed author coming before the 'ex' and the author the name is attributed to after. Note that the 'ex' (or 'Ex') construction that is sometimes used with zoological names has got nothing to do with attribution or ascription, but is used to denote a concept, much like we do here with 'sec.' or 'sensu' in taxon concept labels.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
basionymAscribedAuthor,Basionym Ascribed Author,Ascribed author of the basionym of the name,`basionymAscribedAuthor` is an IRI property. It can be a person or a list of persons.,"An 'ascribed author' is a person (or group of people) who a name is ascribed to in a publication, but who is not the author of the name according to the rules of the nomenclatural codes, because they did not contribute to the validating description of the name. In the `dwc:scientificNameAuthorship` these authors are indicated with 'ex', the ascribed author coming before the 'ex' and the author the name is attributed to after. Note that the 'ex' (or 'Ex') construction that is sometimes used with zoological names has got nothing to do with attribution or ascription, but is used to denote a concept, much like we do here with 'sec.' or 'sensu' in taxon concept labels.",https://tdwg.github.io/tcs2/examples/TaxonName-basionymAscribedAuthor-example-1.html,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
basionymAscribedAuthorLiteral,Basionym Ascribed Author,Ascribed author of the basionym of the name,`basionymAscribedAuthorLiteral` is a Literal property.,"An 'ascribed author' is a person (or group of people) who a name is ascribed to in a publication, but who is not the author of the name according to the rules of the nomenclatural codes, because they did not contribute to the validating description of the name. In the `dwc:scientificNameAuthorship` these authors are indicated with 'ex', the ascribed author coming before the 'ex' and the author the name is attributed to after. Note that the 'ex' (or 'Ex') construction that is sometimes used with zoological names has got nothing to do with attribution or ascription, but is used to denote a concept, much like we do here with 'sec.' or 'sensu' in taxon concept labels.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/TaxonName
NomenclaturalType,Nomenclatural Type,Element to which a scientific name is permanently attached.,"A Nomenclatural Type requires a `typifiedName`, `typeOfType` and either a `typeName` or `typeSpecimen`.","A nomenclatural type fixes the usage of a name to the taxonomic group that contains the type. One or more Nomenclatural Types make up the typification of a Taxon Name. In Darwin Core, a Nomenclatural Type object can be used as object with `dwciri:typeStatus`.",https://tdwg.github.io/tcs2/examples/NomenclaturalType-example-1.html,,http://www.w3.org/2000/01/rdf-schema#Class,http://rs.tdwg.org/tcs/terms/NomenclaturalType
typifiedName,Typified Name,The scientific name for which the specimen or other name is the type.,`typifiedName` is a Taxon Name and is REQUIRED; a Nomenclatural Type can typify only one Taxon Name.,"The `typifiedName` property links the Nomenclatural Type back to the Taxon Name. Also, when coming from the Preserved Specimen, the typified name is the most important piece of information, because there is no point in knowing what kind of type a specimen is without knowing for what name it is the type. Therefore, `typifiedName` is a REQUIRED property.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/NomenclaturalType
typeOfType,Type Of Type,"The kind of type this specimen is, e.g. holotype, isotype etc.",`typeOfType` is an IRI term and SHOULD take its value from a controlled vocabulary. A Nomenclatural Type can have only one `typeOfType`,"This is an IRI property. In the absence of a TDWG controlled vocabulary, it is RECOMMENDED to use a value from the GBIF Nomenclatural Type Status Vocabulary ([https://rs.gbif.org/vocabulary/gbif/type_status_2021-01-18.xml](https://rs.gbif.org/vocabulary/gbif/type_status_2021-01-18.xml)).",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/NomenclaturalType
typeName,Type Name,The name that is the type.,`typeName` is a Taxon Name. A nomenclatural type can have only one `typeName`.,"Taxon names at ranks above species level can be typified by the name of a lower taxon. Ultimately, by following the chain of type names, all names resolve to a type species and thus a type specimen.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/NomenclaturalType
typeSpecimen,Type Specimen,The specimen that is the type.,`typeSpecimen` takes an IRI – or object – that refers to a specimen. A Nomenclatural Type MUST NOT have more than one `typeSpecimen`.,"Names at ranks of species and below are typified by a specimen. This property is mutually exclusive with `typeName`. This is an IRI property. One could use the Darwin Core Preserved Specimen or Material Citation. While a Taxon Name can have more than one type specimens, each of these type specimens requires its own Nomenclatural Type record, so a Nomenclatural Type can have only one `typeSpecimen`.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/NomenclaturalType
typePublishedIn,Type Published In,Publication where the type was nominated,`typePublishedIn` is an IRI term. A Nomenclatural Type can have at most one `typePublishedIn`.,"`typePublishedIn` is relevant for lectotypes, neotypes, epitypes and conserved types. For other kinds of type the publication where the type is designated is the publication the name was published in.",,,http://www.w3.org/1999/02/22-rdf-syntax-ns#Property,http://rs.tdwg.org/tcs/terms/NomenclaturalType
